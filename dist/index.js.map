{"version":3,"sources":["../src/index.ts"],"sourcesContent":["#!/usr/bin/env node\nimport os from \"node:os\";\nimport child from \"node:child_process\";\nimport process from \"node:process\";\nimport crypto from \"node:crypto\";\nimport path from \"node:path\";\nimport fs from \"node:fs\";\nimport esbuild, { Loader, Plugin } from \"esbuild\";\n\nlet proc: child.ChildProcess;\nlet tmpFilePath: string;\nconst id = crypto.randomBytes(6).toString(\"hex\");\nconst out = path.resolve(process.cwd(), `.tzx-${id}.mjs`);\n\nfunction clean() {\n  try {\n    fs.rmSync(out);\n  } catch {}\n  try {\n    if (tmpFilePath) fs.rmSync(tmpFilePath);\n  } catch {}\n  try {\n    if (proc) proc.kill();\n  } catch {}\n}\nfunction exit(exitCode: number, err?: any) {\n  clean();\n  if (err) console.error(err);\n  process.exit(exitCode);\n}\nasync function bundle(inputFilePath: string) {\n  const ext = path.extname(inputFilePath);\n  if (!ext) {\n    tmpFilePath = path.resolve(os.tmpdir(), `${id}.ts`);\n    fs.copyFileSync(inputFilePath, tmpFilePath);\n  }\n\n  const loader: { [key: string]: Loader } = ext ? { [ext]: \"ts\" } : {};\n  const plugins: Plugin[] = [\n    {\n      name: \"make-all-packages-external\",\n      setup(build) {\n        const filter = /^[^./]|^\\.[^./]|^\\.\\.[^/]/; // Must not start with \"/\" or \"./\" or \"../\"\n        build.onResolve({ filter }, ({ path }) => {\n          return { path: path, external: true };\n        });\n      },\n    },\n  ];\n\n  const result = await esbuild.build({\n    entryPoints: [tmpFilePath || inputFilePath],\n    write: false,\n    bundle: true,\n    platform: \"node\",\n    target: \"node16\",\n    format: \"esm\",\n    minify: false,\n    external: [],\n    sourcemap: true,\n    loader: loader,\n    plugins: plugins,\n  });\n\n  return result.outputFiles[0]!.text;\n}\n\nprocess.on(\"SIGINT\", clean);\nprocess.on(\"SIGTERM\", clean);\n\ntry {\n  let input = process.argv[2];\n  if (!input) {\n    console.error(\"\\n[Error]\");\n    console.error(`No file specified`);\n    process.exit(1);\n  }\n\n  const script = await bundle(input);\n  const scriptClean = script.replace(/^import.*(\"|')zx(\";|';|\"|')/gm, \"\");\n\n  fs.writeFileSync(out, scriptClean);\n\n  proc = child.spawn(\"zx\", [out], {\n    stdio: \"inherit\",\n    env: { ...process.env },\n  });\n\n  proc.on(\"exit\", async (exitCode, signalCode) => {\n    if (exitCode === 0) {\n      exit(exitCode);\n    } else {\n      exit(\n        exitCode || 1,\n        `Non-zero exit: code ${exitCode}, signal ${signalCode}`\n      );\n    }\n  });\n  proc.on(\"error\", (err) => exit(1, err));\n} catch (e) {\n  exit(1, e);\n}\n"],"mappings":";;;AACA,OAAO,QAAQ;AACf,OAAO,WAAW;AAClB,OAAO,aAAa;AACpB,OAAO,YAAY;AACnB,OAAO,UAAU;AACjB,OAAO,QAAQ;AACf,OAAO,aAAiC;AAExC,IAAI;AACJ,IAAI;AACJ,IAAM,KAAK,OAAO,YAAY,CAAC,EAAE,SAAS,KAAK;AAC/C,IAAM,MAAM,KAAK,QAAQ,QAAQ,IAAI,GAAG,QAAQ,QAAQ;AAExD,SAAS,QAAQ;AACf,MAAI;AACF,OAAG,OAAO,GAAG;AAAA,EACf,QAAE;AAAA,EAAO;AACT,MAAI;AACF,QAAI;AAAa,SAAG,OAAO,WAAW;AAAA,EACxC,QAAE;AAAA,EAAO;AACT,MAAI;AACF,QAAI;AAAM,WAAK,KAAK;AAAA,EACtB,QAAE;AAAA,EAAO;AACX;AACA,SAAS,KAAK,UAAkB,KAAW;AACzC,QAAM;AACN,MAAI;AAAK,YAAQ,MAAM,GAAG;AAC1B,UAAQ,KAAK,QAAQ;AACvB;AACA,eAAe,OAAO,eAAuB;AAC3C,QAAM,MAAM,KAAK,QAAQ,aAAa;AACtC,MAAI,CAAC,KAAK;AACR,kBAAc,KAAK,QAAQ,GAAG,OAAO,GAAG,GAAG,OAAO;AAClD,OAAG,aAAa,eAAe,WAAW;AAAA,EAC5C;AAEA,QAAM,SAAoC,MAAM,EAAE,CAAC,MAAM,KAAK,IAAI,CAAC;AACnE,QAAM,UAAoB;AAAA,IACxB;AAAA,MACE,MAAM;AAAA,MACN,MAAM,OAAO;AACX,cAAM,SAAS;AACf,cAAM,UAAU,EAAE,OAAO,GAAG,CAAC,EAAE,MAAAA,MAAK,MAAM;AACxC,iBAAO,EAAE,MAAMA,OAAM,UAAU,KAAK;AAAA,QACtC,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AAEA,QAAM,SAAS,MAAM,QAAQ,MAAM;AAAA,IACjC,aAAa,CAAC,eAAe,aAAa;AAAA,IAC1C,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,UAAU,CAAC;AAAA,IACX,WAAW;AAAA,IACX;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAO,OAAO,YAAY,GAAI;AAChC;AAEA,QAAQ,GAAG,UAAU,KAAK;AAC1B,QAAQ,GAAG,WAAW,KAAK;AAE3B,IAAI;AACF,MAAI,QAAQ,QAAQ,KAAK;AACzB,MAAI,CAAC,OAAO;AACV,YAAQ,MAAM,WAAW;AACzB,YAAQ,MAAM,mBAAmB;AACjC,YAAQ,KAAK,CAAC;AAAA,EAChB;AAEA,QAAM,SAAS,MAAM,OAAO,KAAK;AACjC,QAAM,cAAc,OAAO,QAAQ,iCAAiC,EAAE;AAEtE,KAAG,cAAc,KAAK,WAAW;AAEjC,SAAO,MAAM,MAAM,MAAM,CAAC,GAAG,GAAG;AAAA,IAC9B,OAAO;AAAA,IACP,KAAK,EAAE,GAAG,QAAQ,IAAI;AAAA,EACxB,CAAC;AAED,OAAK,GAAG,QAAQ,OAAO,UAAU,eAAe;AAC9C,QAAI,aAAa,GAAG;AAClB,WAAK,QAAQ;AAAA,IACf,OAAO;AACL;AAAA,QACE,YAAY;AAAA,QACZ,uBAAuB,oBAAoB;AAAA,MAC7C;AAAA,IACF;AAAA,EACF,CAAC;AACD,OAAK,GAAG,SAAS,CAAC,QAAQ,KAAK,GAAG,GAAG,CAAC;AACxC,SAAS,GAAP;AACA,OAAK,GAAG,CAAC;AACX;","names":["path"]}